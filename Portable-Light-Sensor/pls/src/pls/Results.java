/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pls;

import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Joe
 */
public class Results extends javax.swing.JFrame implements java.awt.event.KeyListener {

    private String selectedFile = "";
    /**
     * Creates new form Template
     */
    public Results() {
        this.setCursor(this.getToolkit().createCustomCursor(
            new BufferedImage(3, 3, BufferedImage.TYPE_INT_ARGB), new Point(0, 0),
            "null"));
        initComponents();
    }
    
    @Override
    public void keyTyped(KeyEvent evt) {
        if(evt.getKeyChar() == 'q'){
            this.dispose();
        }
        else if(evt.getKeyChar() == '\n'){
            this.dispose();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        redBar = new javax.swing.JProgressBar();
        blueBar = new javax.swing.JProgressBar();
        blueBar2 = new javax.swing.JProgressBar();
        greenBar = new javax.swing.JProgressBar();
        UVBar = new javax.swing.JProgressBar();
        IRBar = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        flickerValue = new javax.swing.JLabel();
        tempValue = new javax.swing.JLabel();
        luxValue = new javax.swing.JLabel();
        greenValue = new javax.swing.JLabel();
        blueValue = new javax.swing.JLabel();
        blueValue2 = new javax.swing.JLabel();
        UVValue = new javax.swing.JLabel();
        IRValue = new javax.swing.JLabel();
        redValue = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        indexValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(this.MAXIMIZED_BOTH);
        setLocationByPlatform(true);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(750, 430));
        setSize(new java.awt.Dimension(800, 480));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Test Results");
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jLabel1KeyTyped(evt);
            }
        });

        redBar.setForeground(new java.awt.Color(255, 0, 0));
        redBar.setMaximum(1000);

        blueBar.setForeground(new java.awt.Color(0, 153, 255));
        blueBar.setMaximum(1000);

        blueBar2.setForeground(new java.awt.Color(0, 0, 153));
        blueBar2.setMaximum(1000);

        greenBar.setForeground(new java.awt.Color(0, 255, 0));
        greenBar.setMaximum(1000);

        UVBar.setForeground(new java.awt.Color(102, 0, 102));
        UVBar.setMaximum(1000);

        IRBar.setForeground(new java.awt.Color(0, 0, 0));
        IRBar.setMaximum(1000);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Red");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Green");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Blue");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("480 nm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("UV");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("IR");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Lux");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Flicker Rate");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Color Temperature");

        flickerValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        flickerValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        flickerValue.setText("N/A");

        tempValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tempValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempValue.setText("N/A");

        luxValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        luxValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        luxValue.setText("N/A");

        greenValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        greenValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        greenValue.setText("N/A");

        blueValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        blueValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        blueValue.setText("N/A");

        blueValue2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        blueValue2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        blueValue2.setText("N/A");

        UVValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UVValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        UVValue.setText("N/A");

        IRValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        IRValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        IRValue.setText("N/A");

        redValue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        redValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        redValue.setText("N/A");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("UV Index");

        indexValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        indexValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indexValue.setText("N/A");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(flickerValue, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(tempValue, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(luxValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(indexValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 134, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UVBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(greenBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(blueBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(blueBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IRBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(redBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redValue, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(greenValue, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(blueValue, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(blueValue2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UVValue, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IRValue, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(redValue))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(greenValue)
                    .addComponent(greenBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blueBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(blueValue))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blueBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(blueValue2))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UVBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UVValue)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IRBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(IRValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addGap(3, 3, 3)
                            .addComponent(flickerValue))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(3, 3, 3)
                            .addComponent(luxValue))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addGap(3, 3, 3)
                            .addComponent(tempValue)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(3, 3, 3)
                        .addComponent(indexValue)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyTyped
        if(evt.getKeyChar() == 'q'){
            this.dispose();
        }
        else if(evt.getKeyChar() == '\n'){
            this.dispose();
        }
    }//GEN-LAST:event_jLabel1KeyTyped

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if(evt.getKeyChar() == 'q'){
            this.dispose();
        }
        else if(evt.getKeyChar() == '\n'){
            this.dispose();
        }
    }//GEN-LAST:event_formKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Template().setVisible(true);
            }
        });
    }
    public void init(String source){
        if(source.equalsIgnoreCase("main")){
           pickFile(); 
        }
        else{
            selectedFile = source;
            displayResults(selectedFile);
        }
    }
    public void pickFile(){
        FileBrowser browser  = new FileBrowser();
        browser.setVisible(true);
        browser.lsDir("/home/pi/ArchivedTests/");
    }
    
    public void loadResults(FileBrowser browser){
        browser.dispose();
        String [] temp = selectedFile.split("/");
        int length = temp.length;
        String title = temp[length-1];
        jLabel1.setText(title);
        displayResults(selectedFile);
    }
    
    private void displayResults(String filename){
        String [] data = new String[11];
        try {
            File file = new File(filename);

            Scanner input = new Scanner(file);

            int i = 0;
            
            while (input.hasNextLine()) {
                String line = input.nextLine();
                String [] splitLine = line.split(" = ");
                data[i] = splitLine[1];
                i++;
            }
            input.close();

        } catch (Exception ex) {
        }
        int maximum = 1000;
        for(int i=0; i<6; i++){
            int temp = Integer.parseInt(data[i]);
            while (temp > maximum){
                maximum += 1000;
            }
        }
        redBar.setMaximum(maximum);
        redBar.setValue(Integer.parseInt(data[0]));
        redValue.setText(data[0] + "/" + maximum);
        greenBar.setMaximum(maximum);
        greenBar.setValue(Integer.parseInt(data[1]));
        greenValue.setText(data[1] + "/" + maximum);
        blueBar.setMaximum(maximum);
        blueBar.setValue(Integer.parseInt(data[2]));
        blueValue.setText(data[2] + "/" + maximum);
        blueBar2.setMaximum(maximum);
        blueBar2.setValue(Integer.parseInt(data[3]));
        blueValue2.setText(data[3] + "/" + maximum);
        UVBar.setMaximum(maximum);
        UVBar.setValue(Integer.parseInt(data[4]));
        UVValue.setText(data[4] + "/" + maximum);
        IRBar.setMaximum(maximum);
        IRBar.setValue(Integer.parseInt(data[5]));
        IRValue.setText(data[5] + "/" + maximum);
        flickerValue.setText(data[6]);
        tempValue.setText(data[7]);
        luxValue.setText(data[8]);
        indexValue.setText(data[9]);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar IRBar;
    private javax.swing.JLabel IRValue;
    private javax.swing.JProgressBar UVBar;
    private javax.swing.JLabel UVValue;
    private javax.swing.JProgressBar blueBar;
    private javax.swing.JProgressBar blueBar2;
    private javax.swing.JLabel blueValue;
    private javax.swing.JLabel blueValue2;
    private javax.swing.JLabel flickerValue;
    private javax.swing.JProgressBar greenBar;
    private javax.swing.JLabel greenValue;
    private javax.swing.JLabel indexValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel luxValue;
    private javax.swing.JProgressBar redBar;
    private javax.swing.JLabel redValue;
    private javax.swing.JLabel tempValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyPressed(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public class FileBrowser extends javax.swing.JFrame {
    
    private String reportFile = "";
    private String cwd = "";
    public FileBrowser() {
        this.setCursor(this.getToolkit().createCustomCursor(
            new BufferedImage(3, 3, BufferedImage.TYPE_INT_ARGB), new Point(0, 0),
            "null"));
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setExtendedState(this.MAXIMIZED_BOTH);
        setForeground(java.awt.Color.black);
        setLocationByPlatform(true);
        setUndecorated(true);
        setSize(new java.awt.Dimension(800, 480));

        jList1.setBackground(new java.awt.Color(51, 25, 0));
        jList1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jList1.setForeground(new java.awt.Color(238, 177, 17));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectedIndex(0);
        jList1.setSelectionBackground(new java.awt.Color(238, 177, 17));
        jList1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jList1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 25, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pick A File");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jList1KeyTyped(java.awt.event.KeyEvent evt) {                                
        if (evt.getKeyChar() == '\n'){
            String selectedFile = (String)jList1.getSelectedValue();
            if (selectedFile.contains("/")){
                lsDir(selectedFile);
            }
            else{
                reportFile = cwd + selectedFile;
                Dispose();
            }
        }
        else if (evt.getKeyChar() == 'b'){
            File file = new File(cwd + "../");
            String s = "";
            try {
                s = file.getCanonicalPath();
            } catch (IOException ex) {
                Logger.getLogger(Results.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!s.equals("/home")){
                lsDir("../");
            }
        }
        else if(evt.getKeyChar() == 'q'){
            Results.this.dispose();
            this.dispose();
        }
    }                               

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Template.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Template().setVisible(true);
            }
        });
    }

    public String[] lsDir(String path){
        // Used Code From:
        // http://stackoverflow.com/questions/8252440/adding-items-to-a-jlist-from-arraylist-using-defaultlistmodel
        // http://stackoverflow.com/questions/16770116/how-to-show-the-file-name-only-in-jlist
        cwd += path;           

        String[] files = null;
        try{
            File[] fileList = (new File(cwd)).listFiles(new FileFilter() {
                @Override
                public boolean accept(File pathname) {
                    String name = pathname.getName().toLowerCase();
                    boolean valid = name.endsWith(".rep") || pathname.isDirectory();
                    return valid && !name.startsWith(".");
                }
            });
            files = new String[fileList.length];
            for(int i=0; i<fileList.length; i++){
                if (fileList[i].isDirectory()){
                    files[i] = fileList[i].getName() + "/"; 
                }
                else{
                    files[i] = fileList[i].getName(); 
                }
            }

        }
        catch (Exception e){
            e.printStackTrace();
        }
        
        
        DefaultListModel<String> model = new DefaultListModel<String>();
        for(int i =0; i<files.length; i++){
            model.addElement(files[i]);
        }
        jList1.setModel(model);
        jList1.setSelectedIndex(0);
        return files;
    }
    
    private void Dispose(){
        Results.this.selectedFile = reportFile;
        Results.this.loadResults(this);
    }

    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}

    
}
